"""change

Revision ID: 0bc6a5c54686
Revises: dc135161ae8e
Create Date: 2025-06-01 14:40:03.940012

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0bc6a5c54686'
down_revision: Union[str, None] = 'dc135161ae8e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('account', 'created_at')
    op.drop_column('account', 'updated_at')
    op.drop_column('account', 'updated_by')
    op.drop_column('account', 'created_by')

    op.alter_column('role', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('role', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    # Thay vì dùng op.alter_column để đổi kiểu trực tiếp, ta dùng op.execute với SQL có USING
    op.execute('ALTER TABLE role ALTER COLUMN created_by TYPE UUID USING created_by::uuid')
    op.execute('ALTER TABLE role ALTER COLUMN updated_by TYPE UUID USING updated_by::uuid')

    op.create_unique_constraint(None, 'role', ['role_name'])
    op.create_foreign_key(None, 'role', 'account', ['created_by'], ['account_id'])
    op.create_foreign_key(None, 'role', 'account', ['updated_by'], ['account_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'role', type_='foreignkey')
    op.drop_constraint(None, 'role', type_='foreignkey')
    op.drop_constraint(None, 'role', type_='unique')
    op.alter_column('role', 'updated_by',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('role', 'created_by',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('role', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('role', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.add_column('account', sa.Column('created_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('account', sa.Column('updated_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('account', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('account', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
