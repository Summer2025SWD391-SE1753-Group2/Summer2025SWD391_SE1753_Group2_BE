"""add token_type to token table

Revision ID: 8def222abdda
Revises: f8501cda2813
Create Date: 2025-07-25 23:39:56.558665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8def222abdda'
down_revision: Union[str, None] = 'f8501cda2813'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_report_report_id', table_name='report')
    op.drop_table('report')
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('feedback', 'priority',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('low', 'medium', 'high', 'urgent', name='feedbackpriorityenum'),
               existing_nullable=True,
               existing_server_default=sa.text("'medium'::character varying"))
    op.alter_column('feedback', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('pending', 'in_progress', 'resolved', 'rejected', name='feedbackstatusenum'),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.drop_index('idx_feedback_created_at', table_name='feedback')
    op.drop_index('idx_feedback_created_by', table_name='feedback')
    op.drop_index('idx_feedback_status', table_name='feedback')
    op.drop_index('idx_feedback_type_id', table_name='feedback')
    op.alter_column('feedback_type', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('active', 'inactive', name='feedbacktypestatusenum'),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.drop_constraint('feedback_type_name_key', 'feedback_type', type_='unique')
    op.drop_index('idx_feedback_type_name', table_name='feedback_type')
    op.create_index(op.f('ix_feedback_type_name'), 'feedback_type', ['name'], unique=True)
    op.alter_column('friend', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('friend', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('token', sa.Column('token_type', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('token', 'token_type')
    op.alter_column('friend', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('friend', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_index(op.f('ix_feedback_type_name'), table_name='feedback_type')
    op.create_index('idx_feedback_type_name', 'feedback_type', ['name'], unique=False)
    op.create_unique_constraint('feedback_type_name_key', 'feedback_type', ['name'], postgresql_nulls_not_distinct=False)
    op.alter_column('feedback_type', 'status',
               existing_type=sa.Enum('active', 'inactive', name='feedbacktypestatusenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.create_index('idx_feedback_type_id', 'feedback', ['feedback_type_id'], unique=False)
    op.create_index('idx_feedback_status', 'feedback', ['status'], unique=False)
    op.create_index('idx_feedback_created_by', 'feedback', ['created_by'], unique=False)
    op.create_index('idx_feedback_created_at', 'feedback', ['created_at'], unique=False)
    op.alter_column('feedback', 'status',
               existing_type=sa.Enum('pending', 'in_progress', 'resolved', 'rejected', name='feedbackstatusenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('feedback', 'priority',
               existing_type=sa.Enum('low', 'medium', 'high', 'urgent', name='feedbackpriorityenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'medium'::character varying"))
    op.alter_column('comments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.create_table('report',
    sa.Column('report_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reject_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_add', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['account.account_id'], name='report_created_by_fkey'),
    sa.PrimaryKeyConstraint('report_id', name='report_pkey')
    )
    op.create_index('ix_report_report_id', 'report', ['report_id'], unique=False)
    # ### end Alembic commands ###
