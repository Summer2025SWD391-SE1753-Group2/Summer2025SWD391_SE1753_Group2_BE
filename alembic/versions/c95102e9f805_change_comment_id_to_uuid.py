"""change_comment_id_to_uuid

Revision ID: c95102e9f805
Revises: 3c0ee786da71
Create Date: 2025-06-12 20:22:48.318097

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c95102e9f805'
down_revision: Union[str, None] = '3c0ee786da71'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('comments', 'comment_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('comments', 'parent_comment_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('comments', 'status',
               existing_type=postgresql.ENUM('active', 'reported', 'deleted', name='commentstatusenum'),
               nullable=True,
               existing_server_default=sa.text("'active'::commentstatusenum"))
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('comments', 'level',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('1'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('comments', 'level',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('comments', 'status',
               existing_type=postgresql.ENUM('active', 'reported', 'deleted', name='commentstatusenum'),
               nullable=False,
               existing_server_default=sa.text("'active'::commentstatusenum"))
    op.alter_column('comments', 'parent_comment_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('comments', 'comment_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
