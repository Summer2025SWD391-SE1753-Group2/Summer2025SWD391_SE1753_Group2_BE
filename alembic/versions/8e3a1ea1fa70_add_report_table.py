"""add report table

Revision ID: 8e3a1ea1fa70
Revises: e0bcaa378ad2
Create Date: 2025-07-15 00:22:16.819718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e3a1ea1fa70'
down_revision: Union[str, None] = 'e0bcaa378ad2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Chỉ tạo bảng report, enum đã tạo thủ công ở DB
    op.create_table(
        'report',
        sa.Column('report_id', postgresql.UUID(as_uuid=True), primary_key=True, nullable=False, index=True),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('type', sa.Enum(
            'Report_material', 'Report_tag', 'Report_topic', 'Report_post', 'Report_other',
            name='reporttypeenum', create_type=False
        ), nullable=False),
        sa.Column('reason', sa.String(length=255), nullable=False),
        sa.Column('status', sa.Enum(
            'PENDING', 'APPROVE', 'REJECT',
            name='reportstatusenum', create_type=False
        ), nullable=False, server_default='PENDING'),
        sa.Column('description', sa.Text, nullable=True),
        sa.Column('reject_reason', sa.Text, nullable=True),
        sa.Column('created_by', postgresql.UUID(as_uuid=True), sa.ForeignKey('account.account_id'), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False)
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('friend', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('friend', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_index(op.f('ix_feedback_type_name'), table_name='feedback_type')
    op.create_index(op.f('idx_feedback_type_name'), 'feedback_type', ['name'], unique=False)
    op.create_unique_constraint(op.f('feedback_type_name_key'), 'feedback_type', ['name'], postgresql_nulls_not_distinct=False)
    op.alter_column('feedback_type', 'status',
               existing_type=sa.Enum('active', 'inactive', name='feedbacktypestatusenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.create_index(op.f('idx_feedback_type_id'), 'feedback', ['feedback_type_id'], unique=False)
    op.create_index(op.f('idx_feedback_status'), 'feedback', ['status'], unique=False)
    op.create_index(op.f('idx_feedback_created_by'), 'feedback', ['created_by'], unique=False)
    op.create_index(op.f('idx_feedback_created_at'), 'feedback', ['created_at'], unique=False)
    op.alter_column('feedback', 'status',
               existing_type=sa.Enum('pending', 'in_progress', 'resolved', 'rejected', name='feedbackstatusenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('feedback', 'priority',
               existing_type=sa.Enum('low', 'medium', 'high', 'urgent', name='feedbackpriorityenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'medium'::character varying"))
    op.alter_column('comments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    # ### end Alembic commands ###
